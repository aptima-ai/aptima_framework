#
# Copyright Â© 2025 Agora
# This file is part of APTIMA Framework, an open source project.
# Licensed under the Apache License, Version 2.0, with certain conditions.
# Refer to the "LICENSE" file in the root directory for more information.
#
import("//build/aptima_runtime/glob.gni")
import("//build/aptima_runtime/aptima.gni")

glob("aptima_runtime_smoke_tests") {
  file_list = all_native_files

  public_deps = [
    "//core/src/aptima_utils",
    "//third_party/googlemock",
    "//third_party/googletest",
  ]

  include_dirs = [ "//core/include" ]
}

aptima_executable("aptima_runtime_smoke_test") {
  output_dir = "${root_out_dir}/tests/standalone"

  deps = [
    ":aptima_runtime_smoke_tests",
    "//core/src/aptima_runtime",
    "//core/src/aptima_utils:aptima_utils_shared",
    "//packages/core_protocols/msgpack:msgpack_files",
    "//tests/aptima_runtime:copy_libraries_for_test",
    "//third_party/nlohmann_json",
  ]

  deps += [
    "audio_frame_test",
    "basic",
    "cmd_conversion",
    "cmd_result_test",
    "command",
    "concurrent",
    "data_test",
    "dest",
    "engine",
    "error",
    "extension",
    "extension_group",
    "graph",
    "graph_name",
    "graph_test",
    "lock",
    "log_test",
    "msg_property",
    "msg_test",
    "multi_dest",
    "notify_test",
    "outer_thread",
    "path",
    "predefined_graph",
    "prepare_to_stop",
    "property",
    "resp_handler",
    "result_conversion",
    "return",
    "same_thread_ext_on_xxx",
    "send",
    "standalone_test",
    "start_graph",
    "suspend_resume",
    "aptima_env_call_timing",
    "aptima_proxy",
    "timer",
    "video_frame_test",
  ]

  if (aptima_enable_aptima_rust && aptima_enable_aptima_rust_apis) {
    deps += [
      "interface_test",
      "schema_test",
    ]
  }

  if (aptima_enable_curl) {
    deps += [ "//third_party/curl" ]
  }

  if (aptima_enable_libwebsockets) {
    deps += [
      "//third_party/libwebsockets",
      "//third_party/mbedtls",
    ]
  }

  if (enable_sanitizer) {
    if (!is_clang) {
      deps += [ "//build/aptima_common/asan:package_asan_lib_for_aptima_framework_standalone_test" ]
    }
  }

  public_deps = [
    "//third_party/googlemock",
    "//third_party/googletest",
  ]

  if (aptima_enable_libwebsockets && aptima_enable_curl) {
    deps += [ "http_server_extension" ]
  }
}

group("smoke") {
  public_deps = [ ":aptima_runtime_smoke_test" ]
}
