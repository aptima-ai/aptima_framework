//
// This file is part of APTIMA Framework, an open source project.
// Licensed under the Apache License, Version 2.0.
// See the LICENSE file for more information.
//
// Note that this is just an example extension written in the GO programming
// language, so the package name does not equal to the containing directory
// name. However, it is not common in Go.
//

package {{package_name}}

import (
	"fmt"

	"axis_framework/aptima"
)

type {{class_name_prefix}}Extension struct {
	aptima.DefaultExtension
}

func newExtension(name string) aptima.Extension {
	return &{{class_name_prefix}}Extension{}
}

func (e *{{class_name_prefix}}Extension) OnStart(tenEnv aptima.TenEnv) {
	tenEnv.LogDebug("OnStart")

	tenEnv.OnStartDone()
}

func (e *{{class_name_prefix}}Extension) OnStop(tenEnv aptima.TenEnv) {
	tenEnv.LogDebug("OnStop")

	tenEnv.OnStopDone()
}

func (e *{{class_name_prefix}}Extension) OnCmd(
	tenEnv aptima.TenEnv,
	cmd aptima.Cmd,
) {
	tenEnv.LogDebug("OnCmd")

	cmdResult, _ := aptima.NewCmdResult(aptima.StatusCodeOk)
	tenEnv.ReturnResult(cmdResult, cmd, nil)
}

func init() {
	fmt.Println("{{package_name}} extension init")

	// Register addon
	aptima.RegisterAddonAsExtension(
		"{{package_name}}",
		aptima.NewDefaultExtensionAddon(newExtension),
	)
}
